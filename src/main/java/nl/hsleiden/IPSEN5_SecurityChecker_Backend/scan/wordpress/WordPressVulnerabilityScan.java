package nl.hsleiden.IPSEN5_SecurityChecker_Backend.scan.wordpress;

import com.fasterxml.jackson.databind.ObjectMapper;
import nl.hsleiden.IPSEN5_SecurityChecker_Backend.model.ScanAlert;
import nl.hsleiden.IPSEN5_SecurityChecker_Backend.model.scan.ScanReport;
import nl.hsleiden.IPSEN5_SecurityChecker_Backend.scan.AbstractScan;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

@Service
public class WordPressVulnerabilityScan extends AbstractScan {
    private final String baseURL = "https://api.geekflare.com/mixedcontent";
    private final String apiKey = "3e75c6c8-8759-4340-a66a-153f5b8bb936";
    private ScanReport currentReport;

    @Override
    public void execute(ScanReport scanReport, String website) throws IOException, InterruptedException {
        super.execute(scanReport, website);
        do {
            getResult();
            TimeUnit.SECONDS.sleep(1);
        } while (!isFinished());
    }
    @Override
    public List<ScanAlert> getResult() throws IOException, InterruptedException {

        Map<String, String> body = new HashMap<>();
        body.put("url", getWebsite());
        String requestBody = new ObjectMapper()
                .writeValueAsString(body);

        HttpClient http = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder(
                        URI.create(baseURL)
                )
                .header("x-api-key", apiKey)
                .POST(HttpRequest.BodyPublishers.ofString(requestBody))
                .build();


        HttpResponse<String> response = http.send(request, HttpResponse.BodyHandlers.ofString());

        super.setTemporaryResult(new JSONObject(response.body()));
        super.setGrade(gradeMixContent(super.getTemporaryResult()));
        super.getTemporaryResult().put("state", "FINISHED");

        // TODO: Zet tempResult om naar een result
        System.out.println("TESTT");
        for(String name : super.getTemporaryResult().keySet()) {
            JSONObject result = (JSONObject) super.getTemporaryResult();

            ScanAlert scanAlert = new ScanAlert(
                    "vulnerability_wordpress",
                    true,
                    result.getString("message")
            );
            super.getResult().add(scanAlert);
        }

        super.getResult().forEach(test -> System.out.println(test));
        return super.getResult();


    }

    private int gradeMixContent(JSONObject result){
        Object meta = result.get("message");
        if ("No mixed content found.".equals(meta)) {
            return 10;
        } else if ("There are mixed Results.".equals(meta)) {
            return 6;
        } else {
            return 1;
        }
    }

    private boolean isFinished() throws IOException, InterruptedException {
        return super.getTemporaryResult().get("state").equals("FINISHED");
    }
}
